@{ Layout = "~/Views/Shared/_Layout.cshtml";}
@model ThunderOnlineModule.Models.tcClient

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tcClient</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <div class="control-label col-md-2">Nombre</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Fecha Nac.</div>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })*@
                @{
                    var displayDate="";
                    if (Model.BirthDate != null)
                    {
                        displayDate = Model.BirthDate.Value.Year + "-";
                        if (Model.BirthDate.Value.Month < 10)
                        {
                            displayDate = displayDate + "0";
                        }
                        displayDate = displayDate + Model.BirthDate.Value.Month + "-";
                        if (Model.BirthDate.Value.Day < 10)
                        {
                            displayDate = displayDate + "0";
                        }
                        displayDate = displayDate + Model.BirthDate.Value.Day;
                    }
                }
                <input class="form-control text-box single-line" data-val="true" data-val-date="The field BirthDate must be a date." id="BirthDate" name="BirthDate" type="date" value="@displayDate" >                
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })                
            </div>
        </div>

        @*<div class="form-group">
            <div class="control-label col-md-2">Grupo</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Group, "Group", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Group", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Email</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Encargado</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Parent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Telefono</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">Comentarios</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>
